const disableMainScroll = function () {
  document.querySelector('body').classList.add('no-scroll');
}

const enableMainScroll = function () {
  let i = 0;
  document.querySelector('#contact-us.opened') && ++i;
  document.querySelector('.privacy-policy.opened') && ++i;
  document.querySelector('#purchase-mini.step-1') && ++i;
  document.querySelector('#purchase-mini.step-2-3') && ++i;
  document.querySelector('#header-mini.opened') && ++i;
  if(i > 1) {
    return;
  }
  document.querySelector('body').classList.remove('no-scroll');
}

function modale() {
    return document.getElementById('modale');
}

function modaleContainer() {
    return document.getElementById('modale-container');
}

function modaleContent() {
    return document.getElementById('modale-content');
}

function modaleClose() {
    return document.getElementById('modale-close');
}

function openModale(params) {
    disableMainScroll();
    let _temp = modale();
    _temp && _temp.classList.add('opened');
    _temp = modale();
    params.modaleClass != undefined && _temp && _temp.classList.add(params.modaleClass);
    _temp = modaleContainer();
    params.contentClass != undefined && _temp && _temp.classList.add(params.contentClass);
    _temp = modaleContent();
    if(_temp) _temp.innerHTML = closePart() + params.content;
    params.onOpen && params.onOpen();
    _temp = modale();
    _temp && _temp.addEventListener('click', function(e) {
        if(e.target && e.target.id == 'modale') {
            closeModale(params.onClose);
        }
    });
    _temp = modale();
    _temp && _temp.addEventListener('keyup', function(e) {
        if(e.keyCode === 27) {
            closeModale(params.onClose);
        }
    });
        _temp = modaleClose();
        _temp && _temp.addEventListener('click', function(e) {
        closeModale(params.onClose);
    });
}

function closeModale(onClose) {
    let _temp = modale();
    _temp && _temp.classList.remove('opened');
    _temp = modaleContainer();
    _temp && _temp.classList.remove(..._temp.classList);
    _temp = modaleContent();
    if(_temp) _temp.innerHTML = "";
    onClose != undefined && onClose();
    enableMainScroll();
}

function closePart() {
    return `<span id="modale-close">+</span>`;
}

// Payment SEPA Modale

function paymentSEPA(datas) {
    return {
        onOpen: datas.onOpen,
        onClose: datas.onClose,
        contentClass: 'payment-sepa',
        content: `
            <h2>Commande validée</h2>
            <div class="thanks">
                Merci, votre commande a bien été prise en compte. Nous l'expédierons dès réception de votre virement de ${datas.total} € sur ce RIB:
            </div>
            <table>
                <tbody class="SEPA">
                    <tr class="RIB"><td>RIB</td><td>${datas.RIB}</td></tr>
                    <tr class="BIC"><td>BIC</td><td>${datas.BIC}</td></tr>
                </tbody>
            </table>
            <div class="info">
                La référence de votre commande est <span class="reference">${datas.reference}</span>, pensez à la notifier dans le libellé de votre virement
            </div>
            <div class="post-scriptum">
                PS : les informations relatives à la commande et son réglement vous ont aussi été envoyées par mail. Vous pourrez y retrouver toutes les informations présentes ici.
            </div>
        `.trim()
    };
};

function paymentProblems(datas = {order: null, onOpen: undefined, onClose: undefined}) {
    console.log(datas);
    return {
        onOpen: datas.onOpen,
        onClose: datas.onClose,
        contentClass: 'payment-problems',
        content: `
            <h2>Erreur lors de la commande</h2>
            <div class="apologize">
                Une latence est apparue lors de votre commande. Veuillez recharger la page et reprendre votre commande. Si ce souci persiste, contactez-nous directement.\nCordialement
            </div>
        `.trim()
    };
}